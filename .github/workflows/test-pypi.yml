name: lite-sort

on:
  push:
    branches:
      - pypi-ci
  workflow_dispatch:

env:
  LATEST_PYVER: "3.13"
  
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["pypy3.10", "3.9", "3.10", "3.11", "3.12", "3.13" ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # You can test your matrix by printing the current Python version
      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          pipx install uv
          uv sync --active
          
      - name: Build wheel
        run: uv build --wheel
      - name: Upload wheel for ${{ env.LATEST_PYVER }}
        if: ${{ matrix.python-version == env.LATEST_PYVER }}
        run: |
          tree
          python -c 'import sys; print(sys.version)'
      - name: Really upload wheel for ${{ env.LATEST_PYVER }}
        if: ${{ matrix.python-version == env.LATEST_PYVER }}
        uses: actions/upload-artifact@v4.6.2
        with:
          name: lite-sort.whl
          path: dist/*.whl        
          
      - name: Build sdist
        run: uv build --sdist
      - name: Upload sdist for ${{ env.LATEST_PYVER }}
        if: ${{ matrix.python-version == env.LATEST_PYVER }}
        run: |
          tree
          python -c 'import sys; print(sys.version)'
      - name: Really upload sdist for ${{ env.LATEST_PYVER }}
        if: ${{ matrix.python-version == env.LATEST_PYVER }}
        uses: actions/upload-artifact@v4.6.2
        with:
          name: lite-sort.tar.gz
          path: dist/*.tar.gz

  publish:
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Sync environment for publishing
        run: |
          pipx install uv
          uv sync --active
          python -c "import sys; print(sys.version)"
          
      - name: Download the built wheel artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: lite-sort.whl
          path: dist/
      - name: Download the source dist artifact
        uses: actions/download-artifact@v4.3.0
        with:
          name: lite-sort.tar.gz
          path: dist/
          
      - name: Publish to TestPyPI using ${{ matrix.python-version }}
        run: |
          tree
          echo $TEST_PYPI_TOKEN
          uv publish --token "$TEST_PYPI_TOKEN" --index testpypi dist/*.tar.gz
        env:
          TEST_PYPI_TOKEN: "pypi-AgENdGVzdC5weXBpLm9yZwIkZmIxYjZmZjEtNWUxOC00Y2U0LTkzNGEtZTlkMzk1NjRmNzI4AAIqWzMsImFmMDI2NGVlLTkzZWItNDRjMC04YTM4LWQ5MTBlZWVjMWI3ZCJdAAAGIMnTHx___lZSrm24Hey4ioIQeNFqFaO1oxH5z0i6lv-8"

